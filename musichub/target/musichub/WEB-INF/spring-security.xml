<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.0.xsd">

<!--  ==== Going to add new code ===== --> 


<security:http auto-config="true"> 

	<!-- <security:intercept-url pattern="/adminproducts/**" access="hasRole('ROLE_ADMIN')" />  -->
	<security:intercept-url pattern="/orders/**" access="hasRole('ROLE_USER')" />
	 <!-- <security:form-login login-page="/signin" default-target-url="/adminproducts" login-processing-url="/perform_login" authentication-failure-url="/loginError"/> --> 
	<security:form-login login-page="/signin" default-target-url="/productdetails" login-processing-url="/perform_login" authentication-failure-url="/loginError"/>
	<security:csrf disabled="true"/> 
	</security:http>
 
<security:authentication-manager>

<security:authentication-provider>
  <security:jdbc-user-service data-source-ref="dataSource"
    users-by-username-query="select username,password,enabled from USERS where username=?"
    authorities-by-username-query="select u1.username, u2.role from USERS u1, user_authorization u2 where u1.id = u2.user_id and u1.username =?"/>

</security:authentication-provider>
</security:authentication-manager>
  
</beans:beans>